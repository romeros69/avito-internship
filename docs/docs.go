// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/balance": {
            "post": {
                "description": "The method of accruing funds to the balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "ReplenishmentBalance",
                "operationId": "replenishment balanse",
                "parameters": [
                    {
                        "description": "Enter user id, value, source (numbers of card)",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.replenishmentRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/balance/{id}": {
            "get": {
                "description": "User balance receipt method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "GetBalanceByUserID",
                "operationId": "get-balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Enter user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.balanceResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/reserve": {
            "post": {
                "description": "The method of reserving funds from the main balance in a separate account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reserve"
                ],
                "summary": "ReserveBalance",
                "operationId": "reserve-balance",
                "parameters": [
                    {
                        "description": "Enter user id, value, service id, order id",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.reserveBalanceDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/reserve/accept": {
            "post": {
                "description": "Revenue recognition method - writes off money from the reserve, adds data to the report for accounting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reserve"
                ],
                "summary": "AcceptReserve",
                "operationId": "accept-reverse",
                "parameters": [
                    {
                        "description": "Enter user id, value, service id, order id",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.reserveBalanceDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "middleware.errResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "v1.balanceResponseDTO": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                }
            }
        },
        "v1.replenishmentRequestDTO": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v1.reserveBalanceDTO": {
            "type": "object",
            "properties": {
                "orderID": {
                    "type": "string"
                },
                "serviceID": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "",
	Description:      "API Server for Book Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
